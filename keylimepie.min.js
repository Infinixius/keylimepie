var Lime={context:null,features:[],modules:{Logger:{},Time:{},Utility:{}},platform:"",version:"1.0.0"};try{window&&(Lime.platform="browser"),Lime.context=window}catch(e){}try{process&&(Lime.platform="node"),Lime.context=global}catch(e){}try{globalThis&&(Lime.context=globalThis)}catch(e){}function define(e,t,i){Lime.features.includes("Object.defineProperty")?Object.defineProperty(e,t,{enumerable:!1,value:i}):e[t]=i}Object.defineProperty&&Lime.features.push("Object.defineProperty"),define(Array.prototype,"random",(function(){return this[Math.floor(Math.random()*this.length)]})),define(Math,"randInt",(function(){return Math.floor(Math.random()*(max-min-1)+min)})),define(Math,"range",(function(e){for(var t=[],i=0;i<e;i++)t.push(i);return t})),define(Number.prototype,"toStringWithSeparator",(function(e){return this.toString().replace(/\B(?=(\d{3})+(?!\d))/g,e??",")})),Lime.modules.Logger.config={align:function(e){return" ".repeat(Object.keys(this.types).reduce(((e,t)=>e.length>t.length?e:t),"").length-e.length)},format:function(e,t,i){return`[${this.timestamp(new Date)}] ${i?this.types[e].color:""}${this.align(e)}[${e.toUpperCase()}]${i?this.types.verbose.color:""} : ${t}`},fileStream:null,newline:{stdout:"[0m\n",file:"\n"},timestamp:function(e){return`${e.getFullYear()}-${("0"+(e.getMonth()+1)).slice(-2)}-${("0"+e.getDate()).slice(-2)} ${e.getHours()}:${e.getMinutes()}:${("0"+e.getSeconds()).slice(-2)}`},types:{info:{stdout:!0,file:!0,color:"[34m"},warn:{stdout:!0,file:!0,color:"[33m"},error:{stdout:!0,file:!0,color:"[31m"},debug:{stdout:!1,file:!0,color:"[32m"},verbose:{stdout:!1,file:!0,color:"[37m"}}},Lime.modules.Logger.init=function(e){for(const e of Object.keys(Lime.modules.Logger.config.types))Logger[e]=t=>{Lime.modules.Logger.log(e,t)};e&&(Lime.modules.Logger.config.fileStream=e)},Lime.modules.Logger.log=function(e,t){"node"==Lime.platform&&(Lime.modules.Logger.config.fileStream&&Lime.modules.Logger.config.fileStream.write(Lime.modules.Logger.config.format(e,t,!1)+Lime.modules.Logger.config.newline.file),process.stdout.write(Lime.modules.Logger.config.format(e,t,!0)+Lime.modules.Logger.config.newline.stdout))},Lime.modules.Time.wait=function(e,t){if(!t)return new Promise(((t,i)=>{setTimeout((()=>{t()}),e)}));setTimeout(t,e)},Lime.modules.Time.waitUntil=function(e,t){if(!t)return new Promise(((t,i)=>{var o=setInterval((()=>{e()&&(t(),clearInterval(o))}))}));var i=setInterval((()=>{e()&&(t(),clearInterval(i))}))},Lime.modules.Time.Timer=class{constructor(e,t,i){this.interval=e,this.limit=t??-1,this.timesRan=0,this.paused=!1,this.callback=i,this.timer}tick(){this.paused||(this.timesRan++,this.timesRan<=this.limit?this.callback(this.timesRan):this.stop())}start(){this.timer||(this.timer=setInterval((()=>{this.tick()}),this.interval))}stop(){this.timer&&clearInterval(this.timer)}pause(){this.paused=!0}resume(){this.paused=!1,this.start()}},Lime.modules.Utility.parseJSONSafe=function(e,t){return new Promise(((i,o)=>{try{i(JSON.parse(e,t))}catch(e){o(e)}}))},Lime.modules.Utility.stringifyJSONSafe=function(e,t,i){return new Promise(((o,r)=>{try{o(JSON.stringify(e,t,i))}catch(e){r(e)}}))},Lime.context.Lime=Lime;for(const e of Object.keys(Lime.modules))Lime.context[e]=Lime.modules[e];
